//
// Copyright (c) 2025 Emilio Mariscal
//
// This file is part of Underpass.
//
//     Underpass is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as published by
//     the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     Underpass is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with Underpass.  If not, see <https://www.gnu.org/licenses/>.
//

#ifndef __GEOBUILDER_HH__
#define __GEOBUILDER_HH__

/// \file geobuilder.hh
/// \brief This build geometries

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
#include "unconfig.h"
#endif

#include <iostream>
#include <map>
#include "data/pq.hh"
#include "osm/osmobjects.hh"
#include "osm/osmchange.hh"
#include "raw/queryraw.hh"

using namespace pq;
using namespace osmobjects;
using namespace osmchange;
using namespace datautils;
using namespace queryraw;

/// \namespace geobuilder
namespace geobuilder {

struct RelationGeometry {
    linestring_t linestring;
    polygon_t polygon;
};

/// \class GeoBuilder
/// \brief This handles all raw geometry building
///
/// This class handles all the geomety construction and re-construction
/// from Nodes, Ways and Relationships to Points, LineStrings and Polygons
class GeoBuilder {
  public:
    GeoBuilder(multipolygon_t &_poly, const std::shared_ptr<QueryRaw> &queryraw);
    ~GeoBuilder();
    /// Build all geometries for a OsmChange file
    void buildGeometries(std::shared_ptr<OsmChangeFile> &osmchanges);
  // private:
    void preProcessChanges(std::shared_ptr<OsmChangeFile> &osmchanges);
    void addIndirectlyModifiedWays(std::shared_ptr<OsmChangeFile> &osmchanges);
    void addIndirectlyModifiedRelations(std::shared_ptr<OsmChangeFile> &osmchanges);
    void fillNodeCache(std::shared_ptr<OsmChangeFile> &osmchanges);
    void fillWayCache(std::shared_ptr<OsmChangeFile> &osmchanges);
    void buildWays(std::shared_ptr<OsmChangeFile> &osmchanges);
    void buildRelations(std::shared_ptr<OsmChangeFile> &osmchanges);
    void buildRelationGeometry(osmobjects::OsmRelation &relation);
    std::map<double, std::shared_ptr<osmobjects::OsmNode>> nodecache;
    std::map<double, std::shared_ptr<osmobjects::OsmWay>> waycache;
    std::string referencedNodeIds;
    std::string modifiedNodesIds;
    std::string modifiedWaysIds;
    std::vector<long> removedWays;
    std::vector<long> removedRelations;
    const multipolygon_t &poly;
    const std::shared_ptr<QueryRaw> &queryraw;

};

} // namespace geobuilder

#endif // EOF __QUERYRAW_HH__

// local Variables:
// mode: C++
// indent-tabs-mode: nil
// End:
