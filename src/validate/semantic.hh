//
// Copyright (c) 2020, 2021, 2022, 2023 Humanitarian OpenStreetMap Team
//
// This file is part of Underpass.
//
//     Underpass is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as published by
//     the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     Underpass is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with Underpass.  If not, see <https://www.gnu.org/licenses/>.
//

/// \file semantic.hh
/// \brief This file implements the data validation used by HOT

#ifndef __SEMANTIC_HH__
#define __SEMANTIC_HH__

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
# include "unconfig.h"
#endif

#include <string>
#include <vector>
#include <array>
#include <memory>
#include <iostream>

#include <boost/config.hpp>
#include <boost/filesystem/path.hpp>
#include <boost/date_time.hpp>
#include <boost/date_time/posix_time/posix_time.hpp>
using namespace boost::posix_time;
using namespace boost::gregorian;

#include "utils/yaml.hh"

#include "validate.hh"

/// \namespace semantic
namespace semantic {

/// \class Semantic
/// \brief This is the plugin class, deprived from the Validate class
class Semantic
{
public:
    Semantic();
    ~Semantic(void) {  };
    static std::shared_ptr<ValidateStatus> checkNode(const osmobjects::OsmNode &node, const std::string &type, yaml::Yaml &tests, std::shared_ptr<ValidateStatus> &status);
    static std::shared_ptr<ValidateStatus> checkWay(const osmobjects::OsmWay &way, const std::string &type, yaml::Yaml &tests, std::shared_ptr<ValidateStatus> &status);
private:
    static bool isValidTag(const std::string &key, const std::string &value, yaml::Node tags);
    static bool isRequiredTag(const std::string &key, yaml::Node required_tags);
    static void checkTag(const std::string &key, const std::string &value, std::shared_ptr<ValidateStatus> &status);
};

} // EOF semantic namespace

#endif  // EOF __SEMANTIC_HH__

// Local Variables:
// mode: C++
// indent-tabs-mode: nil
// End:
